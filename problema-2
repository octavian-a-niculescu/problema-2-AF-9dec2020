#include <iostream>
#include <algorithm>

using namespace std;

void citire(int& n, int a[])
{
	cin >> n;
	for (int i = 0; i < n; i++)
	{
		cin >> a[i];
	}
}

void sortareVectori(int n, int m, int vector1[], int vector2[]) //nu stiu daca e cea mai buna alegere (ca si clean code) sa selectez ambii vectori intr-o fct																//
{																//dar nu am vrut sa folosesc 2 sort-uri in main. as vrea sa-mi explicati care ar fi approach-ul
	sort(vector1, vector1 + n);									//mai bun, daca se poate//
	sort(vector2, vector2 + m);
}

int calculExpresiaMaxima(int n, int m, int vector1[], int vector2[])
{
	if (n == 0)
	{
		return 0;
	}
	if (n == 1)
	{
		return vector1[0] * vector2[m - 1];
	}
	int exp = 0;
	int diferentaMsiN = m - n; // am ales sa fac aceasta diferenta in loc sa folosesc vector2[m-n] pentru a nu creste nr de operatii
	for (int i = 0; i < n; i++)
	{
		exp += vector1[i] * vector2[diferentaMsiN + i];
	}
	return exp;
}

int main()
{
	int A[100], C[100], n, m;
	citire(n, A);
	citire(m, C);
	sortareVectori(n, m, A, C);
	cout << calculExpresiaMaxima(n, m, A, C);
}
